{"name":"dloc-util","qualifiedName":"dloc/dloc-util","comment":"<p>A simple set of utility methods functions.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"backupFile":{"name":"backupFile","qualifiedName":"dloc/dloc-util.backupFile","comment":"<p>Creates a backup for the file denoted by the 'dir' argument.</p><ul><li><a>dloc/dloc-util.backupFile.andDelete</a> to delete the file after backup creation</li></ul>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"filename":{"name":"filename","optional":false,"named":false,"default":false,"type":[{"outer":"dart:core.String","inner":[]}],"value":null,"annotations":[]},"andDelete":{"name":"andDelete","optional":false,"named":false,"default":false,"type":[{"outer":"dart:core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"createDirIfNotExists":{"name":"createDirIfNotExists","qualifiedName":"dloc/dloc-util.createDirIfNotExists","comment":"<p>Creates the directory denoted by the 'dir' argument, if it doesn't exist.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.bool","inner":[]}],"parameters":{"dir":{"name":"dir","optional":false,"named":false,"default":false,"type":[{"outer":"dart:core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"deleteFile":{"name":"deleteFile","qualifiedName":"dloc/dloc-util.deleteFile","comment":"<p>Deletes the file denoted by the 'dir' argument, if it doesn't exist.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"filename":{"name":"filename","optional":false,"named":false,"default":false,"type":[{"outer":"dart:core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lastSegment":{"name":"lastSegment","qualifiedName":"dloc/dloc-util.lastSegment","comment":"<p>Returns last segment from a file system <a>dloc/dloc-util.lastSegment.entity</a>.</p>\n<p>For example:</p>\n<pre><code>D:/NIO/dev/ -&gt; dev\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.String","inner":[]}],"parameters":{"entity":{"name":"entity","optional":false,"named":false,"default":false,"type":[{"outer":"dart:io.FileSystemEntity","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lastSegmentFromString":{"name":"lastSegmentFromString","qualifiedName":"dloc/dloc-util.lastSegmentFromString","comment":"<p>Returns last segment from a <a>dloc/dloc-util.lastSegmentFromString.path</a> as string.</p>\n<p>For example:</p>\n<pre><code>D:/NIO/dev/ -&gt; dev\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.String","inner":[]}],"parameters":{"path":{"name":"path","optional":false,"named":false,"default":false,"type":[{"outer":"dart:core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"parent":{"name":"parent","qualifiedName":"dloc/dloc-util.parent","comment":"<p>Returns parent as String from a file system <a>dloc/dloc-util.parent.entity</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.String","inner":[]}],"parameters":{"entity":{"name":"entity","optional":false,"named":false,"default":false,"type":[{"outer":"dart:io.FileSystemEntity","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toForwardSlash":{"name":"toForwardSlash","qualifiedName":"dloc/dloc-util.toForwardSlash","comment":"<p>Returns the given <a>dloc/dloc-util.toForwardSlash.path</a> replacing all backward to forward slashes (also removing the trailing one, if any).</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart:core.String","inner":[]}],"parameters":{"path":{"name":"path","optional":false,"named":false,"default":false,"type":[{"outer":"dart:core.String","inner":[]}],"value":null,"annotations":[]},"removeLast":{"name":"removeLast","optional":true,"named":true,"default":true,"type":[{"outer":"dynamic","inner":[]}],"value":"true","annotations":[]}},"annotations":[]}}},"classes":{"class":[],"typedef":{},"error":[]},"packageName":"dloc","packageIntro":"<p>DLOC is a Dart program to count the lines of code a directory contains (Dart Line Of Code).</p>\n<p>The supported languages are: </p>\n<p>The options</p>\n<p>TODO</p>"}